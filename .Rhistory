p = ggplot(newdat, aes(x=genres, y = energy, fill = energy )) + coord_polar()
p = ggplot(newdat, aes(x=genres, y = energy, fill = energy ))
p = ggplot(newdat, aes(x=genres, y = energy, fill = energy )) + coord_polar()
p
View(data)
p = ggplot(newdat, aes(x=genres, y =energy , fill = energy )) + geom_bar() + coord_polar()
p
p
p = ggplot(newdat, aes(x=genres, y =energy , fill = energy )) + geom_bar(stat = "identity") + coord_polar()
p
p = ggplot(newdat, aes(x=genres, y =energy , fill = energy )) + geom_bar(stat = "identity")
p
p = ggplot(newdat, aes(x=genres, y =energy , fill = energy )) + geom_bar(stat = "identity") + coord_polar()
p
p = ggplot(newdat, aes(x=genres, y = "", fill = energy )) + geom_bar(stat = "identity") + coord_polar()
p
runApp('NewShinyProject')
p = ggplot(newdat, aes(x= "", y = genres, fill = "" )) + geom_bar(stat = "identity") + coord_polar()
p
runApp('NewShinyProject')
View(newdat)
newdat%>%group_by(genres)%>%summarise_each(funs(mean(., na.rm = TRUE)))
newdat%>%group_by(genres)%>%summarise_each(funs(round(mean(., na.rm = TRUE),4))
)
da = newdat%>%group_by(genres)%>%summarise_each(funs(round(mean(., na.rm = TRUE),4)))
newdat%>%group_by(genres)%>%summarise_all(mean(., na.rm = TRUE))
p = ggplot(newdat, aes(x= "", y = genres, fill = "" )) + geom_bar(stat = "identity") + coord_polar()
p
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
View(data)
dat = data[,c(3:13, 17)]
new_df <- summarise_each(dat, funs(mean))
new_df <- dat%>%group_by(genres)%>%summarise_each(dat, funs(mean))
dat = data[,c(3:13)]
new_df <- dat%>%group_by(genres)%>%summarise_each(dat, funs(mean))
lapply(dat, summarise(mean(.,)))
dat%>%summarise_each(dat, fun(mean))
dat%>%group_by(genre)%>%summarise_each_(funs(mean))
dat%>%group_by(genre)%>%summarise_each(funs(mean))
tmp <- do.call(data.frame,
list(mean = apply(dat, 2, mean),
n = apply(df, 2, length)))
tmp
tmp <- do.call(data.frame,
list(mean = apply(dat, 2, mean),
n = apply(df, 2, length)))
runApp('NewShinyProject')
z = colMeans(dat, na.rm = TRUE)
z
as.data.frame(z)
gen = dat%>%group_by(genres)
dat
View(dat)
dat = [, c(3:13, 17 )]
dat = [ ,c(3:13, 17)]
dat = data[ ,c(3:13, 17)]
View(dat)
View(dat)
spread(dat, genres)
tidyr::separate(dat, genres)
tidyr::separate(dat, genres, into, sep = " ")
tidyr::separate(dat, genres, into, sep = " ")
dat%>%group_by(genres)%>%summarise_each(funs(mean))
View(z)
View(dat)
dat%>%group_by(genres)%>%summarise_each(funs(acousticness))
dat%>%group_by(genres)%>%summarise(mean(acousticness))
accous = dat%>%group_by(genres)%>%summarise(mean(acousticness))
dance = dat%>%group_by(genres)%>%summarise(mean(danceability))
energy = dat%>%group_by(genres)%>%summarise(mean(energy))
instru= dat%>%group_by(genres)%>%summarise(mean(instrumentalness))
live= dat%>%group_by(genres)%>%summarise(mean(liveness))
speech= dat%>%group_by(genres)%>%summarise(mean(speechiness))
tempo= dat%>%group_by(genres)%>%summarise(mean(tempo))
tidyr::gather(dat, key= genres, value = value)
library(tidyr)
z = gather(dat, key= genres, value = value)
View(z)
z = gather(dat, key= key, value = value)
z = gather(dat, key=genres, value = value)
colnames[,2]= feats
colnames[,2]= "feats"
colnames(z[,2])= "feats"
z[,2]
colnames(z)[2] <- "newname2"
z = colnames(z)[2] <- "newname2"
View(z)
z = gather(dat, key= genres, value = value)
colnames(z)[2] <- "newname2"
View(z)
z%>%group_by(genres, newname2)%>%summarise(mean(newname2))
z%>%group_by(genres, newname2)%>%summarise(mean(value))
View(z)
z= z%>%group_by(genres, newname2)%>%summarise(mean(value))
View(z)
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
View(z)
Z%>%spread(genres)
z%>%spread(genres)
z%>%spread(genres, newname2)
runApp('NewShinyProject')
p <- ggplot(z, aes(x = genres, y = newname2, fill = value), color='black') +
geom_bar(width = 1, alpha=0.5, stat="identity") +
scale_y_continuous() +
coord_polar()  +
theme( axis.ticks = element_blank()) +
facet_wrap(~Village, nrow=2, ncol=3) +
guides(colour = guide_legend(title.hjust = 0.5)) +
theme(legend.position=c(0.85,0.25))
p
View(z)
View(z)
colnames(z)[3] = "values"
View(z)
p <- ggplot(z, aes(x = genres, y = values, fill = newname2, color='black') +
geom_bar(width = 1, alpha=0.5, stat="identity") +
scale_y_continuous() +
coord_polar()  +
theme( axis.ticks = element_blank()) +
facet_wrap(~Village, nrow=2, ncol=3) +
guides(colour = guide_legend(title.hjust = 0.5)) +
theme(legend.position=c(0.85,0.25)))
p <- ggplot(z, aes(x = genres, y = values, fill = values, color='black') +
geom_bar(width = 1, alpha=0.5, stat="identity") +
scale_y_continuous() +
coord_polar()  +
theme( axis.ticks = element_blank()) +
facet_wrap(~Village, nrow=2, ncol=3) +
guides(colour = guide_legend(title.hjust = 0.5)) +
theme(legend.position=c(0.85,0.25)))
p <- ggplot(z, aes(x = genres, y = values, fill = values, color='black') +
geom_bar(width = 1, alpha=0.5, stat="identity") +
scale_y_continuous() +
coord_polar()  +
theme( axis.ticks = element_blank()) +
facet_wrap(~genres, nrow=2, ncol=3) +
guides(colour = guide_legend(title.hjust = 0.5)) +
theme(legend.position=c(0.85,0.25)))
p <- ggplot(z, aes(x = genres, y = newnames2, fill = values, color='black') +
geom_bar(width = 1, alpha=0.5, stat="identity") +
scale_y_continuous() +
coord_polar()  +
theme( axis.ticks = element_blank()) +
facet_wrap(~genres, nrow=2, ncol=3) +
guides(colour = guide_legend(title.hjust = 0.5)) +
theme(legend.position=c(0.85,0.25)))
ggplot(z, aes(x = genres, y = newnames2, fill = values, color='black') +
geom_bar(width = 1, alpha=0.5, stat="identity") +
scale_y_continuous() +
coord_polar()  +
theme( axis.ticks = element_blank()) +
facet_wrap(~genres) +
guides(colour = guide_legend(title.hjust = 0.5)) +
theme(legend.position=c(0.85,0.25)))
m_bar(width = 1, alpha=0.5, stat="identity") +
scale_y_continuous() +
coord_polar()  +
theme( axis.ticks = element_blank()) +
facet_wrap(~genres) +
guides(colour = guide_legend(title.hjust = 0.5)) +
theme(legend.position=c(0.85,0.25)))
ggplot(z, aes(x = genres, y = values, fill = newname2, color='black') +
geom_bar(width = 1, alpha=0.5, stat="identity") +
scale_y_continuous() +
coord_polar()  +
theme( axis.ticks = element_blank()) +
facet_wrap(~genres))
View(z)
p = ggplot(z, aes(x=genres, y= values, fill= newname2)) +
geom_bar(binwidth=1, stat='identity') +theme_light() +
scale_fill_gradient(low= 'red', high='white', limits=c(5,40)) +
theme(axis.title.y=element_text(angle=0))
p + theme(axis.text.x = element_text(angle=45, vjust = 1, hjust=1))
p = ggplot(z, aes(x=genres, y= values, fill= newname2)) +
geom_bar(binwidth=1, stat='identity') +theme_light() +
scale_fill_gradient(low= 'red', high='white', limits=c(5,40)) +
theme(axis.title.y=element_text(angle=0))
ggplot(z, aes(x=genres, y= values, fill= newname2)) +
geom_bar(binwidth=1, stat='identity') +theme_light() +
scale_fill_gradient(low= 'red', high='white', limits=c(5,40)) +
theme(axis.title.y=element_text(angle=0))
p = ggplot(z, aes(x=genres, y= values, fill= newname2)) +
geom_bar(stat='identity') +theme_light() +
scale_fill_gradient(low= 'red', high='white', limits=c(5,40)) +
theme(axis.title.y=element_text(angle=0))
p
ggplot(z, aes(x = newname2, y= values, fill= genres)) +
geom_bar(stat='identity') +theme_light() +
scale_fill_gradient(low= 'red', high='white', limits=c(5,40)) +
theme(axis.title.y=element_text(angle=0))
ggplot(z, aes(x = values, y= newname2, fill= genres)) +
geom_bar(stat='identity') +theme_light() +
scale_fill_gradient(low= 'red', high='white', limits=c(5,40)) +
theme(axis.title.y=element_text(angle=0))
ggplot(z, aes(x = values, y= newname2, fill= genres)) +
geom_bar(stat='identity')
ggplot(z, aes(x = values, y= newname2, fill= genres)) +
geom_bar(stat='identity'))
ggplot(z, aes(x = genres, y= values, fill= genres)) +
geom_bar(stat='identity')
ggplot(z, aes(x = genres, y= values, fill= genres)) +
geom_bar(stat='identity') + coord_polar()
gplot(z, aes(x = genres, y= values, fill= genres)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none")
ggplot(z, aes(x = genres, y= values, fill= genres)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none")
View(z)
gplot(z, aes(x = newname2, y= values, fill= genres)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none")
ggplot(z, aes(x = newname2, y= values, fill= genres)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none")
ggplot(z, aes(x = genres, y= values, fill= newname2)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none")
gplot(z, aes(x = genres, y= values, fill= values)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none")
ggplot(z, aes(x = genres, y= values, fill= values)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none")
p = ggplot(z, aes(x = genres, y= values, fill= values)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none") facet_wrap(~genres)
ggplot(z, aes(x = genres, y= values, fill= values)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none") facet_wrap(~genres)
p = ggplot(z, aes(x = genres, y= values, fill= values)) +
geom_bar(stat='identity') + coord_polar() + theme(legend.position = "none") +facet_wrap(~genres)
ggplot(z, aes(x = genres, y= values, fill= values)) +
geom_bar(stat='identity')
ggplot(z, aes(x = genres, y= values, fill= newname2)) +
geom_bar(stat='identity') + facet_wrap(~genres)
View(z)
View(z)
ggplot(z, aes(x = genres, y= values, fill= newname2)) +
geom_bar(position="stack", stat='identity') + facet_wrap(~genres)
ggplot(z, aes(x = genres, y= values, fill= newname2)) +
geom_bar(position="stack", stat='identity')
ggplot(z, aes(x = genres, y= values, fill= newname2)) +
geom_bar(position="stack", stat='identity') + theme(legend.position = "none")
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
data%>%select(genres)
data%>%distinct(select(genres))
data%>%select(genres)%>%distinct()
class(genrelist)
class(genre$list)
genrelist= data%>%select(genres)%>%distinct()
genrelist
class(genrelist)
runApp('NewShinyProject')
levels(genrelist)[1]
genrelist[1]
genrelist[1][1]
levels = c(genrelist))
levels = c(genrelist)
levels
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
levels(data$genres)
levels(data$genres)[1]
levels(data$genres)[1]
levels(data$genres)[7]
runApp('NewShinyProject')
View(z)
View(z)
runApp('NewShinyProject')
choices = unique(data$genres)
choices
runApp('NewShinyProject')
runApp('NewShinyProject')
choices
choices = as.vector(unique(data$genres))
choices
runApp('NewShinyProject')
runApp('NewShinyProject')
z = gather(dat, key= genres, value = value)
colnames(z)[2] <- "newname2"
colnames(z)[3] = "values"
z%>% filter(genres == input$genre) %>%  group_by(genres, newname2)%>%summarise(value = mean(value))
z = gather(dat, key= genres, value = value)
colnames(z)[2] <- "newname2"
colnames(z)[3] = "values"
z%>% filter(genres == "Hip-Hop") %>%  group_by(genres, newname2)%>%summarise(value = mean(value))
z = gather(dat, key= genres, value = value)
colnames(z)[2] <- "newname2"
colnames(z)[3] = "values"
View(z)
runApp('NewShinyProject')
runApp('NewShinyProject')
z%>% filter(genres == input$genre) %>%  group_by(genres, newname2)%>%summarise(value = mean(values))
z%>% filter(genres == "Hip-Hop") %>%  group_by(genres, newname2)%>%summarise(value = mean(values))
runApp('NewShinyProject')
runApp('NewShinyProject')
z %>% filter(genres == input$genre) %>%  group_by(genres, newname2)%>%summarise(value = mean(values))
z%>% filter(genres == "Hip-Hop") %>%  group_by(genres, newname2)%>%summarise(value = mean(values))
runApp('NewShinyProject')
View(dat)
View(data)
View(dat)
dat = data[c,(3:8,10:13, 17)]
dat = data[,c(3:8,10:13, 17)]
View(dat)
runApp('NewShinyProject')
shiny::runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
shiny::runApp('NewShinyProject')
runApp('NewShinyProject')
shiny::runApp('NewShinyProject')
shiny::runApp('NewShinyProject')
shiny::runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
shiny::runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
b = data[ ,c(3:13)]
b
View(b)
runApp('NewShinyProject')
runApp('NewShinyProject')
shiny::runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
ab = a%>%top_n()
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
runApp('NewShinyProject')
shiny::runApp('NYCDSA-SHINY')
shiny::runApp()
shiny::runApp()
a
View(a)
runApp()
runApp()
View(data)
runApp()
runApp()
newa = data%>%select(danceability, genres)%>%mutate(danceability = round(as.numeric(danceability),4))%>%group_by(genres)%>%summarize(dance.prob = mean(danceability))
newa = newa%>%arrange(top_n(12))
newa = newa%>%top_n(12)%>%group_by(dance.prob)
newa = newa%>%top_n(12)%>%arrange(desc(dance.prob))
View(newa)
ggplot(newa, aes(x = danceability, y = dance.prob)) + geom_col()
ggplot(newa, aes(x = genres, y = dance.prob)) + geom_col()
ggplot(newa, aes(x = genres, y = dance.prob)) + geom_tile()
ggplot(newa, aes(x = genres, y = dance.prob)) + geom_tile(height = 3, width = 2
)
ggplot(newa, aes(x = genres, y = dance.prob)) + geom_tile(height = .5, width = 2
)
ggplot(newa, aes(x = genres, y = dance.prob)) + geom_tile(height = .5, width = .5
)
ggplot(newa, aes(x = genres, y = dance.prob)) + geom_tile(height = .3, width = 1
)
ggplot(newa, aes(x = genres, y = dance.prob)) + geom_tile(height = .3, width = .2
)
ggplot(newa, aes(x = genres, y = dance.prob)) + geom_tile(height = .3, width = .1
)
ggplot(newa, aes(x = genres, y = dance.prob), colour = "grey50") + geom_tile(height = .3, width = .1)
ggplot(newa, aes(x = genres, y = dance.prob), fill = dance.prob) + geom_tile(height = .3, width = .1)
ggplot(newa, aes(x = genres, y = dance.prob), fill = genres) + geom_tile(height = .3, width = .1)
ggplot(newa, aes(x = genres, y = dance.prob), colour = genres) + geom_tile(height = .3, width = .1)
ggplot(newa, aes(x = genres, y = dance.prob, fill = genres)) + geom_tile(height = .3, width = .1)
runApp()
runApp()
runApp()
runApp()
runApp()
View(data)
runApp()
runApp()
runApp()
View(a)
View(b)
c = b[, c(1:8)]
View(c)
runApp()
z = gather(c, key= genres, value = value)
View(z)
View(z)
View(z)
dat = data[,c(3:8,10:13,17)]
z = gather(dat, key= genres, value = value)
View(z)
View(b)
View(data)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dat = data[,c(3:8,10,17)]
z = gather(dat, key= genres, value = value)
View(z)
z %>% filter(genres == input$genre) %>%  group_by(genres, newname2)%>%summarise(value = mean(values))
View(z)
colnames(z)[2] <- "newname2"
colnames(z)[3] = "values"
View(z)
View(z)
z %>% filter(genres == input$genre) %>%  group_by(genres, newname2)%>%summarise(value = mean(values))
runApp()
runApp()
runApp()
runApp()
runApp()
View(dat)
View(data)
runApp()
View(z)
View(z)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(z)
View(z)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp('~/Downloads/003b1bae5d364d8b82bb08ece3df791c')
runApp('~/Downloads/003b1bae5d364d8b82bb08ece3df791c')
runApp('~/Downloads/003b1bae5d364d8b82bb08ece3df791c')
runApp()
runApp('~/Downloads/003b1bae5d364d8b82bb08ece3df791c')
runApp('~/Downloads/003b1bae5d364d8b82bb08ece3df791c')
runApp('~/Downloads/003b1bae5d364d8b82bb08ece3df791c')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
